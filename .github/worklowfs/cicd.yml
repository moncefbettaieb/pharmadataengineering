name: DBT CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build & Test in Dev
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dbt
        run: pip install dbt-core dbt-postgres
        # ou dbt-bigquery, dbt-snowflake, etc. selon ton data warehouse

      - name: Configure dbt profile for Dev
        run: |
          mkdir -p ~/.dbt
          echo "pharma_project:
            outputs:
              dev:
                type: postgres
                host: ${{ secrets.DB_HOST_DEV }}
                user: ${{ secrets.DB_USER_DEV }}
                password: ${{ secrets.DB_PASSWORD_DEV }}
                port: ${{ secrets.DB_PORT_DEV }}
                dbname: ${{ secrets.DB_DATABASE_DEV }}
                schema: ${{ secrets.DB_SCHEMA_DEV }}
                threads: 4
              uat:
                type: postgres
                host: ${{ secrets.DB_HOST_UAT }}
                user: ${{ secrets.DB_USER_UAT }}
                password: ${{ secrets.DB_PASSWORD_UAT }}
                port: ${{ secrets.DB_PORT_UAT }}
                dbname: ${{ secrets.DB_DATABASE_UAT }}
                schema: ${{ secrets.DB_SCHEMA_UAT }}
                threads: 4
              prod:
                type: postgres
                host: ${{ secrets.DB_HOST_PROD }}
                user: ${{ secrets.DB_USER_PROD }}
                password: ${{ secrets.DB_PASSWORD_PROD }}
                port: ${{ secrets.DB_PORT_PROD }}
                dbname: ${{ secrets.DB_DATABASE_PROD }}
                schema: ${{ secrets.DB_SCHEMA_PROD }}
                threads: 4
            target: dev
          " >> ~/.dbt/profiles.yml

      - name: Install wget
        run: sudo apt-get install wget

      - name: Download the seed file and clean it
        run: bash scripts/download_seeds.sh && python scripts/clean_taxonomy.py

      - name: dbt deps
        run: dbt deps

      - name: Run dbt seed (Dev)
        run: dbt seed --profiles-dir . --target dev

      - name: dbt compile
        run: dbt compile --profile pharma_project --target dev

      - name: dbt run (Dev)
        run: dbt run --profile pharma_project --target dev

      - name: dbt test (Dev)
        run: dbt test --profile pharma_project --target dev

  deploy-uat:
    name: Deploy & Test in UAT
    runs-on: ubuntu-latest
    needs: [build-and-test]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dbt
        run: pip install dbt-core dbt-postgres

      - name: Configure dbt profile for UAT
        run: |
          mkdir -p ~/.dbt
          echo "pharma_project:
            outputs:
              uat:
                type: postgres
                host: ${{ secrets.DB_HOST_UAT }}
                user: ${{ secrets.DB_USER_UAT }}
                password: ${{ secrets.DB_PASSWORD_UAT }}
                port: ${{ secrets.DB_PORT_UAT }}
                dbname: ${{ secrets.DB_DATABASE_UAT }}
                schema: ${{ secrets.DB_SCHEMA_UAT }}
                threads: 4
            target: uat
          " >> ~/.dbt/profiles.yml
          
      - name: dbt deps
        run: dbt deps
      
      - name: Install wget
        run: sudo apt-get install wget

      - name: Download the seed file and clean it
        run: bash scripts/download_seeds.sh && python scripts/clean_taxonomy.py

      - name: Run dbt seed (UAT)
        run: dbt seed --profiles-dir . --target uat

      - name: dbt compile (UAT)
        run: dbt compile --profile pharma_project --target uat

      - name: dbt run (UAT)
        run: dbt run --profile pharma_project --target uat --exclude intermediate.inter_similarity_scores_categorie_taxonomy

      - name: dbt test (UAT)
        run: dbt test --profile pharma_project --target uat

  deploy-prod:
    name: Deploy & Test in Prod
    runs-on: ubuntu-latest
    needs: [deploy-uat]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install rsync (if needed)
        run: sudo apt-get install -y rsync

      - name: Copy dbt project to Production
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          rsync -avz --exclude=".git" dbt/ ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}:/path/to/prod/dbt

      - name: Copy Airflow DAGs to Production
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          rsync -avz --exclude=".git" airflow/dags/ ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}:/path/to/prod/airflow/dags

      - name: Verify Deployment
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          ssh ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "ls -l /path/to/prod/dbt && ls -l /path/to/prod/airflow/dags"